{"name":"Pivotics","tagline":"a pivot table editor","body":"<!--\r\n\r\nrechtschreibkorrektur\r\n-->\r\n\r\n# TOC\r\n\r\n* [Introduction](#introduction)\r\n* [History](#history)\r\n* [Browser Support](#browsersupport)\r\n* [Installation](#installation)\r\n* [Import](#import)\r\n* [Configure](#configure)\r\n* [Analyze](#analyze)\r\n* [Loading and Storing the Database](#loadsave)\r\n* [Export to CSV](#export)\r\n* [CSS](#css)\r\n\r\n\r\n<a name=\"introduction\"></a>\r\n# Introduction \r\n\r\n*Pivotics* is a HTML5 based [pivot table](http://en.wikipedia.org/wiki/Pivot_table) editor. It allows you to\r\n\r\n* Import CSV data\r\n* Configure the imported data, especially\r\n * Configure the data types of the imported columns\r\n * Set an aggregation function\r\n * Define key fields\r\n* Analyze the imported data by defining table views.\r\n * Define table views by distributing fields on rows and columns\r\n * Aggregate (for instance sum) columns\r\n * Edit the data\r\n * Create new table lines\r\n * Use icons in columns\r\n * Filter data\t\t\t\r\n* Export to CSV\r\n* *Pivotics* includes a simple python based webserver which you can use in your local network for loading and storing data. Optionally you can use also your own webserver. \r\n* The state of the *Pivotics* UI is stored in the URL so you can easly send links to other people.\r\n\r\n*Pivotics* also has some drawbacks you should now:\r\n\r\n* It is not designed for a huge amount of data. I tested it with up to 500 records and about 10 attributes per record.\r\n*Pivotics* is a HTML5 based application which means that all the application logic is running in javascript in your browser.\r\nWhenever you change a table cell or create a new record there is a full table rendering roundtrip. Actually for my 500 records database\r\nI oberserve no lag of time but for larger datasets this will happen.\r\n* Im am a technician an actually hate to develop UIs. So regarding usability *Pivotics* may be suboptimal.\r\n\r\n[Pivot tables](http://en.wikipedia.org/wiki/Pivot_table) are a great and well known concept in [OLAP](http://en.wikipedia.org/wiki/Online_analytical_processing).\r\n\r\nAlso if you don't like *Pivotics* I encourage you to test the pivot table implementation in [Microsoft Excel](http://office.microsoft.com/en-us/excel-help/pivottable-reports-101-HA001034632.aspx) or in [Open Office](http://openoffice.blogs.com/openoffice/2006/11/data_pilots_in_.html).\r\n\r\n<a name=\"history\"></a>\r\n# History \r\n\r\nSome years ago my software company decided to switch to scrum development mode. The company offered\r\nsome scrum software tools for project management. Unfortunately and as expected it turned out that all the tools\r\nwere not suitable for the scrum approach in my team. This may not due to the quality of the software\r\nbut perhaps my team was too agile for these tools: \r\n\r\n* Typically the tools offer the possibility to categorize\r\nthe development jobs by backlog items and tasks. In practice we noticed that this hierarchy is too inflexible.\r\nSometimes you only need two hierarchy levels for categorization sometimes it is three or four.\r\n* We also\r\nobserved that a single development task has several aspects: So for each eask task there is development and testing.\r\nSometimes you want to support multiple technologies or platforms which adds another dimension to the scrum planning\r\nschema.\r\n* Developers hate administration task. In the scrum tools offered by my company it took severaly mouse clicks to confirm a task.\r\nSo developers tend to boycott the tools.\r\n\r\nIn order to overcome these problems I developed *Pivotics* a HTLM5 based tool for configuring and editing pivot tables.\r\nIn fact this is not a pure scrum tool instead it allows you to create and edit arbitrary column based data (like a database table) and\r\nto define own table views on this data.\r\nWhether you use the tools for scrum planning, organizing your private TODO, or maintain the shopping list of your girlfriend is up to you.\r\n\r\n<a name=\"browsersupport\"></a>\r\n# Browser Support\r\n\r\n*Pivotics* relies on HTML5. It does work well with Firefox and Chrome. I have no glue whether it does work in Internet Explorer.\r\n\r\n<a name=\"installation\"></a>\r\n# Installation\r\n\r\n## Using Included Python Webserver\r\n\r\nEnsure that [Python 2](http://www.python.org/) is installed.\r\n\r\nDownload <a href=\"https://github.com/os69/pivotics/archive/master.zip\">Pivotics</a> and unzip the archive. Switch to \r\nthe pivotics directory and start the included python based webserver by\r\n\r\n    python server/server.py\r\n\r\nOpen \r\n\r\n    http://localhost:51000/app/pivotics.html\r\n\t\r\nin your webbrowser. Do not connect this webserver to the public internet. \r\nThis server is highly insecure an could expose your complete filesystem to the public!\r\n\r\n## Custom Webserver\r\nInstead of using the included webserver you can also extract the archive in www directory of a professional \r\nweb server. This should work for all GET requests. *Pivotics* uses a POST request to store data on the server. Probably you need\r\nto enable  POST requests in your webserver configuration.\r\n\r\n<a name=\"import\"></a>\r\n# Import\r\nIn the *Pivotics* toolbar choose IMPORT. Select a CSV file. You can find an example file in  \r\n\r\n    pivotics/data/test1.csv. \r\n\r\nThen press the upload button.\r\nYou should get a message which informs you about the number of imported records.\r\n\r\n<a name=\"configure\"></a>\r\n# Configure\r\n\r\nIn the *Pivotics* toolbar choose CONFIGURE. You will get a list of all the columns of your dataset.\r\nThe test data set contains an example for doing a small scrum planning. \r\n\r\n<table>\r\n<thead>\r\n<tr> <th>Column</th><th>Description</th>\r\n</thead>\r\n<tbody>\r\n<tr><td>backlogitem</td><td>Main category of development tasks</td></tr>\r\n<tr><td>task</td><td>Task within a backlog item</td></tr>\r\n<tr><td>type</td><td>Type of the task, for instance dev=development or test=create test case</td></tr>\r\n<tr><td>name</td><td>Responsible developer</td></tr>\r\n<tr><td>status</td><td>Status like open or finished</td></tr>\r\n<tr><td>prio</td><td>Priority 1,2,3...</td></tr>\r\n<tr><td>effort</td><td>Effort</td></tr>\r\n<tr><td>icon</td><td>test column for demonstrating how to include icons into a table</td></tr>\r\n</tbody>\r\n</table>\r\n\r\nHere is a suggestion how to configure the columns:\r\n\r\n<img alt=\"configure screen\" src=\"doc/configure.jpg\">\r\n\r\n## Key Fields\r\nYou can set a checkbox for each keyfield. *Pivotics* will ensure that there are no records with identical key.\r\n## Type\r\nCurrently the following types are supported: String, Integer, Float and Icon. By using the type icon\r\nyou can display icons in columns. \r\n## Initial Value\r\nDoes allow you to define an initial value which for instance is relevant when creating new records.\r\n## Aggregation\r\nThe following aggregation functions are supported:\r\n\r\n* Sum: Calculates the sum of columns. Only useful for type Integer or Float.\r\n* Statistic: Create a statistic. For each value of a column you will get the number of records with this value.\r\n* List: String concatenation of all columns, separator is line break.\r\n\r\n<a name=\"analyze\"></a>\r\n# Analyze\r\nIn the *Pivotics* toolbar choose ANALYZE. You will get the calculated default view of your data wich probably looks ugly.\r\n\r\n## Configure the Table View\r\nYou can configure the table view in the options dialog. Move fields to the rows, columns or cells area by drag & drop.\r\nDrag & Drop is a little bit fiddly. You may need to move the mouse carefully to find out the right drop area.\r\nAfter choosing apply you will see the result table below. You can close the options dialog by clicking on options.\r\nRows and Columns work in an identical way: Think of an coordination system with two axis: row and column axis.\r\nOn each axis the field values are sequentially arranged. In case you put more than one field on an axis you will\r\nget a nested structure. Values of cell fields are aggregated and displayed in the center area. Pivot tables are\r\na powerful tool but a little bit difficult to explain. So I suggest that you play a little bit with the configuration\r\ndialog in order to find out whats behind.\r\n\r\n<img alt=\"analyze screen\" src=\"doc/analyze1.jpg\">\r\n\r\nYou may have noticed that there is a special field name 'measure' in the column area. This field is only relevant if\r\nthere is more than one field in the cell area. For testing you may put 'measure' on rows. You will notice that\r\nthe cell fields are now listed sequentially on rows.\r\n\r\nSome functionalities like creating new records will only work if 'measure' is in the column area.\r\n\r\n## Change fields\r\nYou can change fields by clicking on a table entry of the rows, columns or cells area.\r\n\r\n<img alt=\"analyze screen\" src=\"doc/analyze2.jpg\">\r\n\r\n## Create, Change or Delete Records\r\nYou can create, change or delete records by the context menu.\r\n\r\n<img alt=\"analyze screen\" src=\"doc/analyze3.jpg\">\r\n\r\n## Filtering\r\nRecords can be filtered by entering Javascript expressions into the filters fields. This is not very\r\nuser friendly but on the other hand it is powerful. For instance:\r\n\r\n    this.type===\"dev\"\r\n\r\nwill restrict the records to those of type development.\r\n\t\r\n## Subtotals\r\nEnter a number into the Number of sum fields field to get subtotals. The number determines on how many levels you will get the subtotals.\r\n\t\r\n## Pivot in Pivot\r\nSometime it is useful to have a pivot table within a pivot table. In the scrum example a typical use case \r\nare tasks only occuring in the test area (central test and review meeting in the example). Without pivot in pivot\r\nyou could end with a lot of empty columns.\r\n\r\n<img alt=\"pivot in pivot\" src=\"doc/pivotinpivot.jpg\">\r\n\r\n## Icons\r\nIn case the datatype of the column is icon the value is displayed by a icon. Enter one of the following value\r\n\r\n    1_ok\r\n    2_warning\r\n    3_error\r\n\r\nIn case you want to add own icons place them in folder app/images.   \r\n  \r\n## Table layout and URL\r\nThe table layout is stored in the URL. So you can send the URL via email. The receiver should get the identical table layout. \r\n\r\n<a name=\"loadsave\"></a>\r\n# Loading and Storing the Database\r\nYou can load and save data sets. The data is stored in JSON format. The data file includes a version number. \r\nWhen using the included webserver there is a rudimentary protection preventing data loss when concurrently\r\nsaving by different users: The first user will win and the second user will get an error message. Actually \r\nthere should be a merge and conflict resolution mechanism but is not. When using your own webserver you\r\nneed to use your own mechanism for ensuring data consistency (maybe by a PHP request handler).\r\n\r\n<img alt=\"analyze screen\" src=\"doc/loadsave.jpg\">\r\n\r\n<a name=\"export\"></a>\r\n# Export to CSV\r\nIn the *Pivotics* toolbar choose EXPORT to export your data set to CSV.\r\n\r\n<a name=\"css\"></a>\r\n# CSS\r\nBy default *Pivotics* uses a dark theme (black.css). You can specify alternative CSS file in the URL, for instance\r\n   \r\n    ...&css=white.css\r\n\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}